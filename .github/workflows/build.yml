name: Build & Release

env:
  GH_TOKEN: ${{ SECRETS.GITHUB_TOKEN }}

on: push

defaults:
  run:
    shell: bash

jobs:
  deb:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build
        run: yarn --link-duplicates --pure-lockfile

      #- name: Release
      #  if: contains(github.ref, 'develop')
      #  run: yarn dist:linux:deb
        
      - name: Electron Builder Action
        uses: samuelmeuli/action-electron-builder@v1.6.0
        with:
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          #release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          skip_build: true
          release: true
          build_script_name: dist:linux:deb


  rpm:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build
        run: yarn --link-duplicates --pure-lockfile

      - name: Release
        if: contains(github.ref, 'develop')
        run: yarn dist:linux:rpm

  appimage:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build
        run: yarn --link-duplicates --pure-lockfile

      - name: Release
        if: contains(github.ref, 'develop')
        run: yarn dist:linux:appimage

  targz:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build
        run: yarn --link-duplicates --pure-lockfile

      - name: Release
        if: contains(github.ref, 'develop')
        run: yarn dist:linux:targz

  snap:
    runs-on: ubuntu-latest

    steps:
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.snapcraft_token }}

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build
        run: yarn --link-duplicates --pure-lockfile

      - name: Release
#        if: contains(github.ref, 'develop')
        run: yarn dist:linux:snap -- --publish always

  snap-armv7l:
    runs-on: ubuntu-latest

    steps:
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.snapcraft_token }}

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build
        run: yarn --link-duplicates --pure-lockfile

      - name: Release
        if: contains(github.ref, 'develop')
        run: yarn dist:linux:snap:armv7l
