name: Build/release

env:
  GH_TOKEN: "${{ SECRETS.GITHUB_TOKEN }}"

on:
  push:
    branches:
      - test-git-actions
      - develop

jobs:
  release-deb:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Build/release Electron app
        run: |
          yarn --link-duplicates --pure-lockfile
          yarn dist:linux:deb
        shell: bash

  release-rpm:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Build/release Electron app
        run: |
          yarn --link-duplicates --pure-lockfile
          yarn dist:linux:rpm
        shell: bash

  release-appimage:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Build/release Electron app
        run: |
          yarn --link-duplicates --pure-lockfile
          yarn dist:linux:appimage
        shell: bash

  release-targz:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Build/release Electron app
        run: |
          yarn --link-duplicates --pure-lockfile
          yarn dist:linux:targz
        shell: bash

  release-snap:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.snapcraft_token }}

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Build/release Electron app
        run: |
          yarn --link-duplicates --pure-lockfile
          yarn dist:linux:snap
        shell: bash
